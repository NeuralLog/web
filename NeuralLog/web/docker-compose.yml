version: '3.8'

services:
  # Web application
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_AUTH_SERVICE_API_URL=http://localhost:3040
      - NEXT_PUBLIC_AUTH_SERVICE_API_KEY=dev-api-key
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - TENANT_ID=default
    volumes:
      - ./:/app
      - /app/node_modules
    depends_on:
      - redis
      - auth-service

  # Auth service
  auth-service:
    build:
      context: ../auth
      dockerfile: Dockerfile.dev
    ports:
      - "3040:3040"
    environment:
      - NODE_ENV=development
      - PORT=3040
      - OPENFGA_HOST=openfga
      - OPENFGA_PORT=8080
      - OPENFGA_API_URL=http://openfga:8080
      - DEFAULT_TENANT_ID=default
    volumes:
      - ../auth:/app
      - /app/node_modules
    depends_on:
      - openfga

  # Redis for tenant context and caching
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  # Postgres for OpenFGA
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: openfga
      POSTGRES_PASSWORD: openfga
      POSTGRES_DB: openfga
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openfga"]
      interval: 5s
      timeout: 5s
      retries: 10

  # OpenFGA for authorization
  openfga:
    image: openfga/openfga:latest
    depends_on:
      - postgres
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgresql://openfga:openfga@postgres:5432/openfga
      - OPENFGA_LOG_FORMAT=json
      - OPENFGA_AUTHN_METHOD=none
      - OPENFGA_PLAYGROUND_ENABLED=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  postgres-data:
  redis-data:
